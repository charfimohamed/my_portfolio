{"ast":null,"code":"var _jsxFileName = \"/Users/mohamedcharfi/Documents/projets personels/my_portfolio/src/components/Projects/Projects.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ThemeContext } from '../../contexts/ThemeContext';\nimport { fetchProjectsData } from '../../data/projectsData'; // Adjust the path as necessary\n\nimport { HiArrowRight } from \"react-icons/hi\";\nimport './Projects.css';\nimport SingleProject from './SingleProject/SingleProject';\nimport { Grid } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Projects() {\n  _s();\n\n  const {\n    theme\n  } = useContext(ThemeContext);\n  const [projectsData, setProjectsData] = useState([]); // Initialize as an empty array\n\n  useEffect(() => {\n    const getProjectsData = async () => {\n      const data = await fetchProjectsData(); // Fetch data when the component mounts\n\n      setProjectsData(data); // Set the fetched data to the state\n    };\n\n    getProjectsData();\n  }, []); // Empty dependency array ensures this runs only once when the component mounts\n\n  const useStyles = makeStyles(() => ({\n    viewAllBtn: {\n      color: theme.tertiary,\n      backgroundColor: theme.primary,\n      transition: 'color 0.2s',\n      \"&:hover\": {\n        color: theme.secondary,\n        backgroundColor: theme.primary\n      }\n    },\n    viewArr: {\n      color: theme.tertiary,\n      backgroundColor: theme.secondary70,\n      width: '40px',\n      height: '40px',\n      padding: '0.5rem',\n      fontSize: '1.05rem',\n      borderRadius: '50%',\n      cursor: 'pointer',\n      transition: 'background-color 0.2s',\n      \"&:hover\": {\n        color: theme.tertiary,\n        backgroundColor: theme.secondary\n      }\n    }\n  }));\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: projectsData.length > 0 &&\n    /*#__PURE__*/\n    // Check that projectsData has been fetched\n    _jsxDEV(\"div\", {\n      className: \"projects\",\n      id: \"projects\",\n      style: {\n        backgroundColor: theme.secondary\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"projects--header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            color: theme.primary\n          },\n          children: \"Projects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"projects--body\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"projects--bodyContainer\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            className: \"project-grid\",\n            container: true,\n            direction: \"row\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            children: projectsData.map(project => /*#__PURE__*/_jsxDEV(SingleProject, {\n              theme: theme,\n              id: project.id,\n              name: project.projectName,\n              desc: project.projectDesc,\n              tags: project.tags,\n              code: project.code,\n              demo: project.demo,\n              image: project.image\n            }, project.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n}\n\n_s(Projects, \"atfEGwdYQQQc4k+BYPN3Tu7Etsw=\", false, function () {\n  return [useStyles];\n});\n\n_c = Projects;\nexport default Projects;\n\nvar _c;\n\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"sources":["/Users/mohamedcharfi/Documents/projets personels/my_portfolio/src/components/Projects/Projects.js"],"names":["React","useContext","useState","useEffect","Link","makeStyles","ThemeContext","fetchProjectsData","HiArrowRight","SingleProject","Grid","Projects","theme","projectsData","setProjectsData","getProjectsData","data","useStyles","viewAllBtn","color","tertiary","backgroundColor","primary","transition","secondary","viewArr","secondary70","width","height","padding","fontSize","borderRadius","cursor","classes","length","map","project","id","projectName","projectDesc","tags","code","demo","image"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { ThemeContext } from '../../contexts/ThemeContext';\nimport { fetchProjectsData } from '../../data/projectsData';  // Adjust the path as necessary\nimport { HiArrowRight } from \"react-icons/hi\";\n\nimport './Projects.css';\nimport SingleProject from './SingleProject/SingleProject';\nimport {Grid} from \"@material-ui/core\";\n\nfunction Projects() {\n    const { theme } = useContext(ThemeContext);\n    const [projectsData, setProjectsData] = useState([]);  // Initialize as an empty array\n\n    useEffect(() => {\n        const getProjectsData = async () => {\n            const data = await fetchProjectsData();  // Fetch data when the component mounts\n            setProjectsData(data);  // Set the fetched data to the state\n        };\n\n        getProjectsData();\n    }, []);  // Empty dependency array ensures this runs only once when the component mounts\n\n    const useStyles = makeStyles(() => ({\n        viewAllBtn: {\n            color: theme.tertiary,\n            backgroundColor: theme.primary,\n            transition: 'color 0.2s',\n            \"&:hover\": {\n                color: theme.secondary,\n                backgroundColor: theme.primary,\n            }\n        },\n        viewArr: {\n            color: theme.tertiary,\n            backgroundColor: theme.secondary70,\n            width: '40px',\n            height: '40px',\n            padding: '0.5rem',\n            fontSize: '1.05rem',\n            borderRadius: '50%',\n            cursor: 'pointer',\n            transition: 'background-color 0.2s',\n            \"&:hover\": {\n                color: theme.tertiary,\n                backgroundColor: theme.secondary,\n            }\n        },\n    }));\n\n    const classes = useStyles();\n\n    return (\n        <>\n            {projectsData.length > 0 && (  // Check that projectsData has been fetched\n                <div className=\"projects\" id=\"projects\" style={{ backgroundColor: theme.secondary }}>\n                    <div className=\"projects--header\">\n                        <h1 style={{ color: theme.primary }}>Projects</h1>\n                    </div>\n                    <div className=\"projects--body\">\n                        <div className=\"projects--bodyContainer\">\n                            <Grid className=\"project-grid\" container direction=\"row\" alignItems=\"center\" justifyContent=\"center\">\n                                {projectsData.map(project => (\n                                    <SingleProject\n                                        theme={theme}\n                                        key={project.id}\n                                        id={project.id}\n                                        name={project.projectName}\n                                        desc={project.projectDesc}\n                                        tags={project.tags}\n                                        code={project.code}\n                                        demo={project.demo}\n                                        image={project.image}\n                                    />\n                                ))}\n                            </Grid>\n                        </div>\n\n                        {/*projectsData.length > 4 && (\n                            <div className=\"projects--viewAll\">\n                                <Link to=\"/projects\">\n                                    <button className={classes.viewAllBtn}>\n                                        View All\n                                        <HiArrowRight className={classes.viewArr} />\n                                    </button>\n                                </Link>\n                            </div>\n                        )*/}\n                    </div>\n                </div>\n            )}\n        </>\n    );\n}\n\nexport default Projects;\n"]},"metadata":{},"sourceType":"module"}