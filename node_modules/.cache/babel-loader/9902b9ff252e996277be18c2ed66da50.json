{"ast":null,"code":"const axios = require('axios');\n\nconst fs = require('fs'); // GitHub username\n\n\nconst username = 'mohamedcharfi'; // GitHub API endpoint\n\nconst apiEndpoint = `https://api.github.com/users/${username}/repos`;\n\nasync function fetchAllRepositories() {\n  try {\n    const response = await axios.get(apiEndpoint);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching repositories:', error);\n    return [];\n  }\n}\n\nfunction createProjectEntry(id, repoData) {\n  const imageUrl = `https://raw.githubusercontent.com/${username}/${repoData.name}/portfolio_image.svg`; // Example image path\n\n  return {\n    id: id,\n    projectName: repoData.name,\n    projectDesc: repoData.description || 'No description available.',\n    tags: [],\n    // Tags can be manually added or inferred based on project details\n    code: repoData.html_url,\n    demo: repoData.homepage || repoData.html_url,\n    image: imageUrl // Direct URL to the image in the repository\n\n  };\n}\n\nasync function generateProjectsData() {\n  const repositories = await fetchAllRepositories();\n  let projectsData = [];\n  repositories.forEach((repo, index) => {\n    const projectEntry = createProjectEntry(index + 1, repo);\n    projectsData.push(projectEntry);\n  }); // Convert to JavaScript export format\n\n  const projectsDataJS = `export const projectsData = ${JSON.stringify(projectsData, null, 4).replace(/\\\"/g, \"'\")};`; // Save to file\n\n  fs.writeFileSync('projectsData.js', projectsDataJS);\n  console.log('projectsData.js file generated successfully.');\n}\n\ngenerateProjectsData();","map":{"version":3,"sources":["/Users/mohamedcharfi/Documents/projets personels/my_portfolio/src/data/projectsData.js"],"names":["axios","require","fs","username","apiEndpoint","fetchAllRepositories","response","get","data","error","console","createProjectEntry","id","repoData","imageUrl","name","projectName","projectDesc","description","tags","code","html_url","demo","homepage","image","generateProjectsData","repositories","projectsData","forEach","repo","index","projectEntry","push","projectsDataJS","JSON","stringify","replace","writeFileSync","log"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,MAAMC,EAAE,GAAGD,OAAO,CAAC,IAAD,CAAlB,C,CAEA;;;AACA,MAAME,QAAQ,GAAG,eAAjB,C,CAEA;;AACA,MAAMC,WAAW,GAAI,gCAA+BD,QAAS,QAA7D;;AAEA,eAAeE,oBAAf,GAAsC;AAClC,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAUH,WAAV,CAAvB;AACA,WAAOE,QAAQ,CAACE,IAAhB;AACH,GAHD,CAGE,OAAOC,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACD,KAAR,CAAc,8BAAd,EAA8CA,KAA9C;AACA,WAAO,EAAP;AACH;AACJ;;AAED,SAASE,kBAAT,CAA4BC,EAA5B,EAAgCC,QAAhC,EAA0C;AACtC,QAAMC,QAAQ,GAAI,qCAAoCX,QAAS,IAAGU,QAAQ,CAACE,IAAK,sBAAhF,CADsC,CACiE;;AACvG,SAAO;AACHH,IAAAA,EAAE,EAAEA,EADD;AAEHI,IAAAA,WAAW,EAAEH,QAAQ,CAACE,IAFnB;AAGHE,IAAAA,WAAW,EAAEJ,QAAQ,CAACK,WAAT,IAAwB,2BAHlC;AAIHC,IAAAA,IAAI,EAAE,EAJH;AAIO;AACVC,IAAAA,IAAI,EAAEP,QAAQ,CAACQ,QALZ;AAMHC,IAAAA,IAAI,EAAET,QAAQ,CAACU,QAAT,IAAqBV,QAAQ,CAACQ,QANjC;AAOHG,IAAAA,KAAK,EAAEV,QAPJ,CAOa;;AAPb,GAAP;AASH;;AAED,eAAeW,oBAAf,GAAsC;AAClC,QAAMC,YAAY,GAAG,MAAMrB,oBAAoB,EAA/C;AACA,MAAIsB,YAAY,GAAG,EAAnB;AAEAD,EAAAA,YAAY,CAACE,OAAb,CAAqB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAClC,UAAMC,YAAY,GAAGpB,kBAAkB,CAACmB,KAAK,GAAG,CAAT,EAAYD,IAAZ,CAAvC;AACAF,IAAAA,YAAY,CAACK,IAAb,CAAkBD,YAAlB;AACH,GAHD,EAJkC,CASlC;;AACA,QAAME,cAAc,GAAI,+BAA8BC,IAAI,CAACC,SAAL,CAAeR,YAAf,EAA6B,IAA7B,EAAmC,CAAnC,EAAsCS,OAAtC,CAA8C,KAA9C,EAAqD,GAArD,CAA0D,GAAhH,CAVkC,CAYlC;;AACAlC,EAAAA,EAAE,CAACmC,aAAH,CAAiB,iBAAjB,EAAoCJ,cAApC;AACAvB,EAAAA,OAAO,CAAC4B,GAAR,CAAY,8CAAZ;AACH;;AAEDb,oBAAoB","sourcesContent":["const axios = require('axios');\nconst fs = require('fs');\n\n// GitHub username\nconst username = 'mohamedcharfi';\n\n// GitHub API endpoint\nconst apiEndpoint = `https://api.github.com/users/${username}/repos`;\n\nasync function fetchAllRepositories() {\n    try {\n        const response = await axios.get(apiEndpoint);\n        return response.data;\n    } catch (error) {\n        console.error('Error fetching repositories:', error);\n        return [];\n    }\n}\n\nfunction createProjectEntry(id, repoData) {\n    const imageUrl = `https://raw.githubusercontent.com/${username}/${repoData.name}/portfolio_image.svg`; // Example image path\n    return {\n        id: id,\n        projectName: repoData.name,\n        projectDesc: repoData.description || 'No description available.',\n        tags: [], // Tags can be manually added or inferred based on project details\n        code: repoData.html_url,\n        demo: repoData.homepage || repoData.html_url,\n        image: imageUrl // Direct URL to the image in the repository\n    };\n}\n\nasync function generateProjectsData() {\n    const repositories = await fetchAllRepositories();\n    let projectsData = [];\n\n    repositories.forEach((repo, index) => {\n        const projectEntry = createProjectEntry(index + 1, repo);\n        projectsData.push(projectEntry);\n    });\n\n    // Convert to JavaScript export format\n    const projectsDataJS = `export const projectsData = ${JSON.stringify(projectsData, null, 4).replace(/\\\"/g, \"'\")};`;\n\n    // Save to file\n    fs.writeFileSync('projectsData.js', projectsDataJS);\n    console.log('projectsData.js file generated successfully.');\n}\n\ngenerateProjectsData();\n"]},"metadata":{},"sourceType":"module"}